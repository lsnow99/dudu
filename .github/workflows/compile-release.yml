# This GitHub Actions workflow compiles the code for several architectures and
# generates a release on GitHub

name: Compile and Release

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  build:
    name: Compile for different operating systems and release
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      # Dudu requires Go version 1.16+
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16.0'

      - name: Setup
        run: |
          mkdir -p bin

      - name: Compile for Windows
        run: |
          GOOS=windows GOARCH=386 go build -o bin/dudu-windows_x86.exe -ldflags="-X 'main.Version=$(git describe --tags)'" github.com/lsnow99/dudu/cmd/dudu
          GOOS=windows GOARCH=amd64 go build -o bin/dudu-windows_x64.exe -ldflags="-X 'main.Version=$(git describe --tags)'" github.com/lsnow99/dudu/cmd/dudu

      - name: Compile for OS X
        run: |
          GOOS=darwin GOARCH=amd64 go build -o bin/dudu-osx_amd64 -ldflags="-X 'main.Version=$(git describe --tags)'" github.com/lsnow99/dudu/cmd/dudu
          GOOS=darwin GOARCH=arm64 go build -o bin/dudu-osx_arm64 -ldflags="-X 'main.Version=$(git describe --tags)'" github.com/lsnow99/dudu/cmd/dudu

      - name: Compile for Linux
        run: |
          GOOS=linux GOARCH=386 go build -o bin/dudu-linux_x86 -ldflags="-X 'main.Version=$(git describe --tags)'" github.com/lsnow99/dudu/cmd/dudu
          GOOS=linux GOARCH=amd64 go build -o bin/dudu-linux_x64 -ldflags="-X 'main.Version=$(git describe --tags)'" github.com/lsnow99/dudu/cmd/dudu
          GOOS=linux GOARCH=arm go build -o bin/dudu-linux_arm -ldflags="-X 'main.Version=$(git describe --tags)'" github.com/lsnow99/dudu/cmd/dudu
          GOOS=linux GOARCH=arm64 go build -o bin/dudu-linux_arm64 -ldflags="-X 'main.Version=$(git describe --tags)'" github.com/lsnow99/dudu/cmd/dudu

      # Requires adding a GITHUB_TOKEN secret
      - name: Create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd bin

          TAG="$(git describe --tags)"

          ASSETS=()
          for ASSET in *; do
            ASSETS+=("--attach" "$ASSET")
          done

          hub release create \
            "${ASSETS[@]}" \
            --message "Compiled binaries for dudu $TAG" \
            "$TAG"
